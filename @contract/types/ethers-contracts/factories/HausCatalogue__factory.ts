/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HausCatalogue, HausCatalogueInterface } from "../HausCatalogue";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS_ZERO",
    type: "error",
  },
  {
    inputs: [],
    name: "ALREADY_INITIALIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "ALREADY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "CANNOT_DELEGATECALL",
    type: "error",
  },
  {
    inputs: [],
    name: "DELEGATE_CALL_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "INITIALIZING",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_APPROVAL",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_RECIPIENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_TARGET",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "INVALID_UPGRADE",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_INITIALIZING",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_DELEGATECALL",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_PENDING_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_PROXY",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_UUPS",
    type: "error",
  },
  {
    inputs: [],
    name: "UNSUPPORTED_UUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contentURI",
        type: "string",
      },
    ],
    name: "ContentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "CreatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "canceledOwner",
        type: "address",
      },
    ],
    name: "OwnerCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnerPending",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payoutAddress",
        type: "address",
      },
    ],
    name: "RoyaltyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelOwnershipTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct HausCatalogue.TokenData",
        name: "_data",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "contentHash",
            type: "bytes32",
          },
        ],
        internalType: "struct HausCatalogue.ContentData",
        name: "_content",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "safeTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "contentHash",
            type: "bytes32",
          },
        ],
        internalType: "struct HausCatalogue.ContentData",
        name: "_content",
        type: "tuple",
      },
    ],
    name: "updateContentURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "updateCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "updateMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImpl",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImpl",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516126fb61004c60003960008181610c1001528181610c5101528181610ec401528181610f050152610f9901526126fb6000f3fe6080604052600436106102045760003560e01c80636352211e11610118578063b88d4fde116100a0578063e985e9c51161006f578063e985e9c514610603578063f2fde38b1461064c578063f8361bab1461066c578063fb339e4c1461068c578063fbd8d283146106ac57600080fd5b8063b88d4fde14610591578063c87b56dd146105b1578063e30c3978146105d1578063e8a3d485146105ef57600080fd5b80637f9c8413116100e75780637f9c8413146104fe5780638da5cb5b1461051e5780638fe86b3f1461053c57806395d89b411461055c578063a22cb4651461057157600080fd5b80636352211e14610489578063669d311c146104a957806370a08231146104c957806379ba5097146104e957600080fd5b80632a55205a1161019b57806342842e0e1161016a57806342842e0e146103e857806342966c68146104085780634f1ef28614610428578063510b51581461043b57806352d1902d1461047457600080fd5b80632a55205a146103455780632eb4a7ab146103845780633659cfe6146103a8578063395db2cd146103c857600080fd5b8063095ea7b3116101d7578063095ea7b3146102d057806321ff9970146102f057806323452b9c1461031057806323b872dd1461032557600080fd5b806301ffc9a71461020957806306fdde031461023e578063077f224a14610260578063081812fc14610282575b600080fd5b34801561021557600080fd5b50610229610224366004611cad565b6106e5565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b50610253610737565b6040516102359190611cf6565b34801561026c57600080fd5b5061028061027b366004611dea565b6107c5565b005b34801561028e57600080fd5b506102b861029d366004611e62565b6000908152600560205260409020546001600160a01b031690565b6040516001600160a01b039091168152602001610235565b3480156102dc57600080fd5b506102806102eb366004611e7b565b6108ac565b3480156102fc57600080fd5b5061028061030b366004611e62565b610972565b34801561031c57600080fd5b506102806109cd565b34801561033157600080fd5b50610280610340366004611ea7565b610a49565b34801561035157600080fd5b50610365610360366004611ee8565b610bb8565b604080516001600160a01b039093168352602083019190915201610235565b34801561039057600080fd5b5061039a600b5481565b604051908152602001610235565b3480156103b457600080fd5b506102806103c3366004611f0a565b610c06565b3480156103d457600080fd5b506102806103e3366004611f0a565b610ce6565b3480156103f457600080fd5b50610280610403366004611ea7565b610d63565b34801561041457600080fd5b50610280610423366004611e62565b610e2f565b610280610436366004611f27565b610eba565b34801561044757600080fd5b506102b8610456366004611e62565b6000908152600960205260409020600101546001600160a01b031690565b34801561048057600080fd5b5061039a610f8c565b34801561049557600080fd5b506102b86104a4366004611e62565b610fea565b3480156104b557600080fd5b506102806104c4366004611f8b565b611020565b3480156104d557600080fd5b5061039a6104e4366004611f0a565b6110b2565b3480156104f557600080fd5b506102806110f7565b34801561050a57600080fd5b50610280610519366004611fd3565b611181565b34801561052a57600080fd5b506007546001600160a01b03166102b8565b34801561054857600080fd5b50610280610557366004612010565b6111f7565b34801561056857600080fd5b5061025361129b565b34801561057d57600080fd5b5061028061058c36600461204d565b6112a8565b34801561059d57600080fd5b506102806105ac366004612080565b61130d565b3480156105bd57600080fd5b506102536105cc366004611e62565b6113ce565b3480156105dd57600080fd5b506008546001600160a01b03166102b8565b3480156105fb57600080fd5b506060610253565b34801561060f57600080fd5b5061022961061e36600461211f565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b34801561065857600080fd5b50610280610667366004611f0a565b611470565b34801561067857600080fd5b50610280610687366004611f8b565b6114f7565b34801561069857600080fd5b5061039a6106a736600461214d565b611589565b3480156106b857600080fd5b506102b86106c7366004611e62565b6000908152600960205260409020600201546001600160a01b031690565b60006301ffc9a760e01b6001600160e01b03198316148061071657506380ac58cd60e01b6001600160e01b03198316145b806107315750635b5e139f60e01b6001600160e01b03198316145b92915050565b600180546107449061220e565b80601f01602080910402602001604051908101604052809291908181526020018280546107709061220e565b80156107bd5780601f10610792576101008083540402835291602001916107bd565b820191906000526020600020905b8154815290600101906020018083116107a057829003601f168201915b505050505081565b600054610100900460ff16158015806107e2575060005460ff1615155b80156107fe5750303b1515806107fe575060005460ff16600114155b1561081c5760405163439a74c960e01b815260040160405180910390fd5b6000805460ff19166001179055801561083f576000805461ff0019166101001790555b610849848461173c565b6108528261177d565b610860600a80546001019055565b80156108a6576000805461ff0019169055604051600181527fbe9b076dc5b65990cca9dd9d7366682482e7817a6f6bc7f4faf4dc32af497f329060200160405180910390a15b50505050565b6000818152600360205260409020546001600160a01b03163381148015906108f857506001600160a01b038116600090815260066020908152604080832033845290915290205460ff16155b1561091657604051633201fe7360e01b815260040160405180910390fd5b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6007546001600160a01b0316331461099d5760405163d238ed5960e01b815260040160405180910390fd5b60405181907f90004c04698bc3322499a575ed3752dd4abf33e0a7294c06a787a0fe01bea94190600090a2600b55565b6007546001600160a01b031633146109f85760405163d238ed5960e01b815260040160405180910390fd5b6008546007546040516001600160a01b0392831692909116907f682679deecef4dcd49674845cc1e3a075fea9073680aa445a8207d5a4bdea3da90600090a3600880546001600160a01b0319169055565b6000818152600360205260409020546001600160a01b03848116911614610a8357604051639d2d273160e01b815260040160405180910390fd5b6001600160a01b038216610aaa576040516366e7950960e01b815260040160405180910390fd5b336001600160a01b03841614801590610ae757506001600160a01b038316600090815260066020908152604080832033845290915290205460ff16155b8015610b0a57506000818152600560205260409020546001600160a01b03163314155b15610b2857604051633201fe7360e01b815260040160405180910390fd5b6001600160a01b0380841660008181526004602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600590925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a45b505050565b60008281526009602052604081206002015481906001600160a01b0381169061271090610bf090600160a01b900461ffff1686612258565b610bfa9190612277565b915091505b9250929050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c4f576040516343d22ee960e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c986000805160206126a6833981519152546001600160a01b031690565b6001600160a01b031614610cbf5760405163073a6c8560e51b815260040160405180910390fd5b610cc8816117f1565b610ce38160405180602001604052806000815250600061181c565b50565b6007546001600160a01b03163314610d115760405163d238ed5960e01b815260040160405180910390fd5b600880546001600160a01b0319166001600160a01b03838116918217909255600754604051919216907f4f2638f5949b9614ef8d5e268cb51348ad7f434a34812bf64b6e95014fbd357e90600090a350565b610d6e838383610a49565b813b15158015610e115750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e049190612299565b6001600160e01b03191614155b15610bb35760405163290802d360e11b815260040160405180910390fd5b6000818152600960205260409020600101546001600160a01b031633148015610e715750610e5c81610fea565b6001600160a01b0316336001600160a01b0316145b610eb15760405162461bcd60e51b815260206004820152600c60248201526b27b7363c9031b932b0ba37b960a11b60448201526064015b60405180910390fd5b610ce381611900565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610f03576040516343d22ee960e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f4c6000805160206126a6833981519152546001600160a01b031690565b6001600160a01b031614610f735760405163073a6c8560e51b815260040160405180910390fd5b610f7c826117f1565b610f888282600161181c565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fd75760405163e6acac4960e01b815260040160405180910390fd5b506000805160206126a683398151915290565b6000818152600360205260408120546001600160a01b03168061073157604051639d2d273160e01b815260040160405180910390fd5b6007546001600160a01b0316331461104b5760405163d238ed5960e01b815260040160405180910390fd5b6040516001600160a01b0382169083907f13ceafb5e8ec39102bd452913a5c00a05f3b060d636d3a567c1c80e8b4321fe790600090a360009182526009602052604090912060020180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b0382166110db576040516366e7950960e01b815260040160405180910390fd5b506001600160a01b031660009081526004602052604090205490565b6008546001600160a01b031633146111225760405163065cd53160e01b815260040160405180910390fd5b60075460405133916001600160a01b0316907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a360088054600780546001600160a01b03199081166001600160a01b03841617909155169055565b6007546001600160a01b031633146111ac5760405163d238ed5960e01b815260040160405180910390fd5b6020810135827f0d555bd4628e8349ca5d17ca332d615c92b84cd24ab943921e8abcf6ae22c98b6111dd84806122b6565b6040516111eb929190612326565b60405180910390a35050565b6000828152600960205260409020600101546001600160a01b0316331461124b5760405162461bcd60e51b815260206004820152600860248201526710b1b932b0ba37b960c11b6044820152606401610ea8565b817f459157ba24c7ab9878b165ef465fa6ae2ab42bcd8445f576be378768b0c473098260405161127b9190611cf6565b60405180910390a26000828152600960205260409020610bb38282612390565b600280546107449061220e565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191016111eb565b611318858585610a49565b833b151580156113a95750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906113599033908a90899089908990600401612450565b6020604051808303816000875af1158015611378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139c9190612299565b6001600160e01b03191614155b156113c75760405163290802d360e11b815260040160405180910390fd5b5050505050565b60008181526009602052604090208054606091906113eb9061220e565b80601f01602080910402602001604051908101604052809291908181526020018280546114179061220e565b80156114645780601f1061143957610100808354040283529160200191611464565b820191906000526020600020905b81548152906001019060200180831161144757829003601f168201915b50505050509050919050565b6007546001600160a01b0316331461149b5760405163d238ed5960e01b815260040160405180910390fd5b6007546040516001600160a01b038084169216907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a3600780546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031633146115225760405163d238ed5960e01b815260040160405180910390fd5b6040516001600160a01b0382169083907fc0186d9ba7364ebd80a7010121367f481af81e1028bf368b2172fedf2c6fc7de90600090a360009182526009602052604090912060010180546001600160a01b0319166001600160a01b03909216919091179055565b600061161983838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600b5491506115d690506040890160208a01611f0a565b6040516020016115fe919060609190911b6bffffffffffffffffffffffff1916815260140190565b604051602081830303815290604052805190602001206119b1565b6116545760405162461bcd60e51b815260206004820152600c60248201526b10bb30b634b210383937b7b360a11b6044820152606401610ea8565b612710611667608087016060880161249f565b61ffff16106116ab5760405162461bcd60e51b815260206004820152601060248201526f0726f79616c747920213c2031303030360841b6044820152606401610ea8565b60006116b6600a5490565b90506116c233826119c7565b600081815260096020526040902086906116dc82826124f6565b50506020850135817f0d555bd4628e8349ca5d17ca332d615c92b84cd24ab943921e8abcf6ae22c98b61170f88806122b6565b60405161171d929190612326565b60405180910390a3611733600a80546001019055565b95945050505050565b600054610100900460ff1661176457604051633125da6760e11b815260040160405180910390fd5b60016117708382612390565b506002610bb38282612390565b600054610100900460ff166117a557604051633125da6760e11b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040516000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350565b6007546001600160a01b03163314610ce35760405163d238ed5960e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561184f57610bb383611a8f565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156118a9575060408051601f3d908101601f191682019092526118a691810190612641565b60015b6118c65760405163605d905960e11b815260040160405180910390fd5b6000805160206126a683398151915281146118f457604051630424da4b60e11b815260040160405180910390fd5b50610bb3838383611ae8565b6000818152600360205260409020546001600160a01b031680611936576040516329074bf960e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020908152604080832080546000190190558583526003825280832080546001600160a01b031990811690915560059092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000826119be8584611b0d565b14949350505050565b6001600160a01b0382166119ee576040516366e7950960e01b815260040160405180910390fd5b6000818152600360205260409020546001600160a01b031615611a245760405163dfa4c0d560e01b815260040160405180910390fd5b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b803b611ab95760405163310365cd60e21b81526001600160a01b0382166004820152602401610ea8565b6000805160206126a683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611af183611b5a565b600082511180611afe5750805b15610bb3576108a68383611ba2565b600081815b8451811015611b5257611b3e82868381518110611b3157611b3161265a565b6020026020010151611c2d565b915080611b4a81612670565b915050611b12565b509392505050565b611b6381611a8f565b6040516001600160a01b03821681527fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b9060200160405180910390a150565b6060823b611bc3576040516337f2022960e01b815260040160405180910390fd5b600080846001600160a01b031684604051611bde9190612689565b600060405180830381855af49150503d8060008114611c19576040519150601f19603f3d011682016040523d82523d6000602084013e611c1e565b606091505b50915091506117338282611c5f565b6000818310611c49576000828152602084905260409020611c58565b60008381526020839052604090205b9392505050565b60608215611c6e575080610731565b815115611c7e5781518083602001fd5b60405163062536b160e41b815260040160405180910390fd5b6001600160e01b031981168114610ce357600080fd5b600060208284031215611cbf57600080fd5b8135611c5881611c97565b60005b83811015611ce5578181015183820152602001611ccd565b838111156108a65750506000910152565b6020815260008251806020840152611d15816040850160208701611cca565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d5a57611d5a611d29565b604051601f8501601f19908116603f01168101908282118183101715611d8257611d82611d29565b81604052809350858152868686011115611d9b57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611dc657600080fd5b611c5883833560208501611d3f565b6001600160a01b0381168114610ce357600080fd5b600080600060608486031215611dff57600080fd5b833567ffffffffffffffff80821115611e1757600080fd5b611e2387838801611db5565b94506020860135915080821115611e3957600080fd5b50611e4686828701611db5565b9250506040840135611e5781611dd5565b809150509250925092565b600060208284031215611e7457600080fd5b5035919050565b60008060408385031215611e8e57600080fd5b8235611e9981611dd5565b946020939093013593505050565b600080600060608486031215611ebc57600080fd5b8335611ec781611dd5565b92506020840135611ed781611dd5565b929592945050506040919091013590565b60008060408385031215611efb57600080fd5b50508035926020909101359150565b600060208284031215611f1c57600080fd5b8135611c5881611dd5565b60008060408385031215611f3a57600080fd5b8235611f4581611dd5565b9150602083013567ffffffffffffffff811115611f6157600080fd5b8301601f81018513611f7257600080fd5b611f8185823560208401611d3f565b9150509250929050565b60008060408385031215611f9e57600080fd5b823591506020830135611fb081611dd5565b809150509250929050565b600060408284031215611fcd57600080fd5b50919050565b60008060408385031215611fe657600080fd5b82359150602083013567ffffffffffffffff81111561200457600080fd5b611f8185828601611fbb565b6000806040838503121561202357600080fd5b82359150602083013567ffffffffffffffff81111561204157600080fd5b611f8185828601611db5565b6000806040838503121561206057600080fd5b823561206b81611dd5565b915060208301358015158114611fb057600080fd5b60008060008060006080868803121561209857600080fd5b85356120a381611dd5565b945060208601356120b381611dd5565b935060408601359250606086013567ffffffffffffffff808211156120d757600080fd5b818801915088601f8301126120eb57600080fd5b8135818111156120fa57600080fd5b89602082850101111561210c57600080fd5b9699959850939650602001949392505050565b6000806040838503121561213257600080fd5b823561213d81611dd5565b91506020830135611fb081611dd5565b6000806000806060858703121561216357600080fd5b843567ffffffffffffffff8082111561217b57600080fd5b908601906080828903121561218f57600080fd5b909450602086013590808211156121a557600080fd5b6121b188838901611fbb565b945060408701359150808211156121c757600080fd5b818701915087601f8301126121db57600080fd5b8135818111156121ea57600080fd5b8860208260051b85010111156121ff57600080fd5b95989497505060200194505050565b600181811c9082168061222257607f821691505b602082108103611fcd57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561227257612272612242565b500290565b60008261229457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156122ab57600080fd5b8151611c5881611c97565b6000808335601e198436030181126122cd57600080fd5b83018035915067ffffffffffffffff8211156122e857600080fd5b602001915036819003821315610bff57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600061233a6020830184866122fd565b949350505050565b601f821115610bb357600081815260208120601f850160051c810160208610156123695750805b601f850160051c820191505b8181101561238857828155600101612375565b505050505050565b815167ffffffffffffffff8111156123aa576123aa611d29565b6123be816123b8845461220e565b84612342565b602080601f8311600181146123f357600084156123db5750858301515b600019600386901b1c1916600185901b178555612388565b600085815260208120601f198616915b8281101561242257888601518255948401946001909101908401612403565b50858210156124405787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b038681168252851660208201526040810184905260806060820181905260009061248490830184866122fd565b979650505050505050565b61ffff81168114610ce357600080fd5b6000602082840312156124b157600080fd5b8135611c588161248f565b6000813561073181611dd5565b80546001600160a01b0319166001600160a01b0392909216919091179055565b600081356107318161248f565b8135601e1983360301811261250a57600080fd5b8201803567ffffffffffffffff81111561252357600080fd5b6020813603818401131561253657600080fd5b61254a82612544865461220e565b86612342565b6000601f831160018114612580576000841561256857508482018301355b600019600386901b1c1916600185901b1786556125dd565b600086815260209020601f19851690835b828110156125b2578785018601358255938501936001909101908501612591565b50858210156125d15760001960f88760031b161c198585890101351681555b505060018460011b0186555b50506125f66125ed8287016124bc565b600186016124c9565b5050506002810161261261260c604085016124bc565b826124c9565b610bb3612621606085016124e9565b82805461ffff60a01b191660a09290921b61ffff60a01b16919091179055565b60006020828403121561265357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161268257612682612242565b5060010190565b6000825161269b818460208701611cca565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220470cfcf32b5ee90e8b3961122ecb07d8dc9bfcdee0d3dd3f4ad9915d0c07452964736f6c634300080f0033";

type HausCatalogueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HausCatalogueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HausCatalogue__factory extends ContractFactory {
  constructor(...args: HausCatalogueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HausCatalogue> {
    return super.deploy(overrides || {}) as Promise<HausCatalogue>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HausCatalogue {
    return super.attach(address) as HausCatalogue;
  }
  override connect(signer: Signer): HausCatalogue__factory {
    return super.connect(signer) as HausCatalogue__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HausCatalogueInterface {
    return new utils.Interface(_abi) as HausCatalogueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HausCatalogue {
    return new Contract(address, _abi, signerOrProvider) as HausCatalogue;
  }
}
